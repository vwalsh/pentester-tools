import { Routes, Route, Link, LinkProps } from 'react-router-dom'

import Home from './pages/Home'
import About from './pages/About'

import React, { useCallback } from 'react'
import { ThemeProvider, createTheme, styled } from '@mui/material/styles'
import CssBaseline from '@mui/material/CssBaseline'
import IconButton from '@mui/material/IconButton'
import Brightness4Icon from '@mui/icons-material/Brightness4'
import Brightness7Icon from '@mui/icons-material/Brightness7'
import GppBadIcon from '@mui/icons-material/GppBad'
import EmojiPeopleIcon from '@mui/icons-material/EmojiPeople'
import { useSignal } from '@preact/signals-react'
import NewCommandBuilder from './pages/NewCommandBuilder'
import { red } from '@mui/material/colors'
import ConstructionIcon from '@mui/icons-material/Construction'

const StyledLink = styled(({ ...props }: LinkProps) => <Link {...props} />)(
  ({ theme }) => ({
    color:
      theme.palette.mode === 'dark' ? red[500] : theme.palette.common.black,
    background:
      theme.palette.mode === 'dark'
        ? theme.palette.common.black
        : theme.palette.common.white,
    textDecoration: 'none',
    padding: '20px',
    display: 'block',
    borderRight: '1px solid #cecece',
  })
)

function App() {
  const mode = useSignal<'light' | 'dark'>('dark')

  const toggleColorMode = useCallback(() => {
    mode.value = mode.value === 'light' ? 'dark' : 'light'
  }, [mode])

  const theme = React.useMemo(
    () =>
      createTheme({
        palette: {
          mode: mode.value === undefined ? 'dark' : mode.value,
        },
      }),
    [mode.value]
  )

  return (
    <>
      <ThemeProvider theme={theme}>
        <CssBaseline />
        <nav
          style={{
            display: 'flex',
            alignContent: 'center',
            alignItems: 'center',
            width: '100%',
          }}
        >
          <StyledLink to="/">
            <GppBadIcon /> Tools
          </StyledLink>
          <StyledLink to="/about">
            <EmojiPeopleIcon /> About
          </StyledLink>
          <StyledLink to="/new-command">
            <ConstructionIcon /> New Command
          </StyledLink>

          <IconButton sx={{ ml: 1 }} onClick={toggleColorMode} color="inherit">
            {theme.palette.mode === 'dark' ? (
              <Brightness7Icon />
            ) : (
              <Brightness4Icon />
            )}
            &nbsp;Theme
          </IconButton>
        </nav>

        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/about" element={<About />} />
          <Route path="/new-command" element={<NewCommandBuilder />} />
        </Routes>
      </ThemeProvider>
    </>
  )
}

export default App
