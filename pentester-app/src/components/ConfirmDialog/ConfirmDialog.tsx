import React from 'react'
import Button from '@mui/material/Button'
import Dialog from '@mui/material/Dialog'
import DialogActions from '@mui/material/DialogActions'
import DialogContent from '@mui/material/DialogContent'
import DialogContentText from '@mui/material/DialogContentText'
import DialogTitle from '@mui/material/DialogTitle'
import { useSignal } from '@preact/signals-react'
import DeleteIcon from '@mui/icons-material/Delete'

interface Props {
  buttonText: string
  title: string
  desc: string
  onConfirm: () => void
}

const ConfirmDialog = React.memo(
  ({ title, desc, buttonText, onConfirm }: Props) => {
    const open = useSignal<boolean>(false)

    const handleClickOpen = () => {
      open.value = true
    }

    const handleClose = (confirmed: boolean) => {
      open.value = false

      if (confirmed) {
        onConfirm()
      }
    }

    return (
      <React.Fragment>
        <Button color="error" variant="outlined" onClick={handleClickOpen}>
          {buttonText}
          <DeleteIcon />
        </Button>
        <Dialog
          open={open.value}
          onClose={handleClose}
          aria-labelledby="confirm-dialog-title"
          aria-describedby="confirm-dialog-description"
        >
          <DialogTitle id="confirm-dialog-title">{title}</DialogTitle>
          <DialogContent>
            <DialogContentText id="confirm-dialog-description">
              {desc}
            </DialogContentText>
          </DialogContent>
          <DialogActions>
            <Button
              variant="contained"
              color="error"
              onClick={() => {
                handleClose(true)
              }}
            >
              Confirm
            </Button>
            <Button
              onClick={() => {
                handleClose(false)
              }}
              autoFocus
              variant="contained"
              color="success"
            >
              Cancel
            </Button>
          </DialogActions>
        </Dialog>
      </React.Fragment>
    )
  }
)

export default ConfirmDialog
