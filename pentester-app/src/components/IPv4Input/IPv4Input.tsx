import { Box, InputAdornment, TextField, Typography } from '@mui/material'
import AlertDialog from '../AlertDialog'
import CopyItem from '../CopyItem'
import { effect, useSignal } from '@preact/signals-react'
import { ahost, aport } from '../../signals/signals'

function IPv4Input() {
  const ipv4 = useSignal<[number, number, number, number]>([10, 10, 10, 10])

  effect(() => {
    ahost.value = ipv4.value.join('.')
  })

  return (
    <Box>
      <TextField
        required
        id="ipv4-attacker-octet-1"
        type="number"
        label="Octet 1"
        InputProps={{
          inputProps: {
            max: 255,
            min: 1,
          },
          startAdornment: (
            <InputAdornment position="start">
              <AlertDialog title="Set the IPv4 for the attacking box (aka kali)">
                <Typography>
                  TIP: Left Mouse click into the text field and Mouse Wheel
                  Scroll to quickly change the value of the IPv4 Octet
                </Typography>
              </AlertDialog>
            </InputAdornment>
          ),
        }}
        defaultValue={ipv4.value[0]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 1 || val > 255) {
            val = 1
          }
          ipv4.value = [val, ipv4.value[1], ipv4.value[2], ipv4.value[3]]
        }}
      />
      <TextField
        required
        id="ipv4-attacker-octet-2"
        type="number"
        label="Octet 2"
        InputProps={{
          inputProps: {
            max: 255,
            min: 0,
          },
        }}
        defaultValue={ipv4.value[1]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 255) {
            val = 0
          }
          ipv4.value = [ipv4.value[0], val, ipv4.value[2], ipv4.value[3]]
        }}
      />
      <TextField
        required
        id="ipv4-attacker-octet-3"
        type="number"
        label="Octet 3"
        InputProps={{
          inputProps: {
            max: 255,
            min: 0,
          },
        }}
        defaultValue={ipv4.value[2]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 255) {
            val = 0
          }
          ipv4.value = [ipv4.value[0], ipv4.value[1], val, ipv4.value[3]]
        }}
      />
      <TextField
        required
        id="ipv4-attacker-octet-4"
        type="number"
        label="Octet 4"
        InputProps={{
          inputProps: {
            max: 255,
            min: 0,
          },
        }}
        defaultValue={ipv4.value[3]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 255) {
            val = 0
          }
          ipv4.value = [ipv4.value[0], ipv4.value[1], ipv4.value[2], val]
        }}
      />

      <TextField
        required
        id="port-attacker"
        type="number"
        label="A Port"
        defaultValue={aport}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 65535) {
            val = 8000
          }
          aport.value = val
        }}
        InputProps={{
          inputProps: {
            max: 65535,
            min: 1,
          },
          startAdornment: (
            <InputAdornment position="start">
              <AlertDialog title="Set the IPv4 Port for the attacking box (aka kali)">
                <Typography>
                  TIP: Left Mouse click into the text field and Mouse Wheel
                  Scroll to quickly change the value of the Port
                </Typography>
              </AlertDialog>
            </InputAdornment>
          ),
        }}
      />

      <br />
      <CopyItem val={`${ipv4.value.join('.')}:${aport}`}>
        <Typography variant="h6">
          Attacker: {ipv4.value.join('.')}:{aport}
        </Typography>
      </CopyItem>
      <br />
    </Box>
  )
}

export default IPv4Input
