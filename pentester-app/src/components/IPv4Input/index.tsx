import {
  Box,
  IconButton,
  InputAdornment,
  TextField,
  Typography,
} from '@mui/material'
import { useState } from 'react'
import AlertDialog from '../AlertDialog'
import CopyItem from '../CopyItem'
import useGlobalStore from '../../hooks/useGlobalStore'

function IPv4Input() {
  const [ipv4, setIpv4] = useState<[number, number, number, number]>([
    10, 10, 10, 10,
  ])
  const [aport, setAport] = useState<number>(8000)

  // const {setAhost, setAport} = useGlobalStore()

  return (
    <Box>
      <TextField
        required
        id="ipv4-attacker-octet-1"
        type="number"
        label="Octet 1"
        InputProps={{
          inputProps: {
            max: 255,
            min: 1,
          },
          startAdornment: (
            <InputAdornment position="start">
              <AlertDialog title="Set the IPv4 for the attacking box (aka kali)">
                <Typography>
                  TIP: Left Mouse click into the text field and Mouse Wheel
                  Scroll to quickly change the value of the IPv4 Octet
                </Typography>
              </AlertDialog>
            </InputAdornment>
          ),
        }}
        defaultValue={ipv4[0]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 1 || val > 255) {
            val = 1
          }
          setIpv4((prev) => {
            return [val, prev[1], prev[2], prev[3]]
          })
        }}
      />
      <TextField
        required
        id="ipv4-attacker-octet-2"
        type="number"
        label="Octet 2"
        InputProps={{
          inputProps: {
            max: 255,
            min: 0,
          },
        }}
        defaultValue={ipv4[1]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 255) {
            val = 0
          }
          setIpv4((prev) => {
            return [prev[0], val, prev[2], prev[3]]
          })
        }}
      />
      <TextField
        required
        id="ipv4-attacker-octet-3"
        type="number"
        label="Octet 3"
        InputProps={{
          inputProps: {
            max: 255,
            min: 0,
          },
        }}
        defaultValue={ipv4[2]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 255) {
            val = 0
          }
          setIpv4((prev) => {
            return [prev[0], prev[1], val, prev[3]]
          })
        }}
      />
      <TextField
        required
        id="ipv4-attacker-octet-4"
        type="number"
        label="Octet 4"
        InputProps={{
          inputProps: {
            max: 255,
            min: 0,
          },
        }}
        defaultValue={ipv4[3]}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 255) {
            val = 0
          }
          setIpv4((prev) => {
            return [prev[0], prev[1], prev[2], val]
          })
        }}
      />

      <TextField
        required
        id="port-attacker"
        type="number"
        label="A Port"
        defaultValue={aport}
        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
          let val = parseInt(event.target.value)
          if (val < 0 || val > 65535) {
            val = 8000
          }
          setAport(val)
        }}
        InputProps={{
          inputProps: {
            max: 65535,
            min: 1,
          },
          startAdornment: (
            <InputAdornment position="start">
              <AlertDialog title="Set the IPv4 Port for the attacking box (aka kali)">
                <Typography>
                  TIP: Left Mouse click into the text field and Mouse Wheel
                  Scroll to quickly change the value of the Port
                </Typography>
              </AlertDialog>
            </InputAdornment>
          ),
        }}
      />

      <br />
      <CopyItem val={`${ipv4.join('.')}:${aport}`}>
        <Typography variant="h6">
          Attacker: {ipv4.join('.')}:{aport}
        </Typography>
      </CopyItem>
      <br />
    </Box>
  )
}

export default IPv4Input
