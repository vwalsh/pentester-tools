import { TextField, TextFieldProps } from '@mui/material'
import React from 'react'
import { useSignal } from '@preact/signals-react'

interface Props {
  props: TextFieldProps
  numberChangeEvent: (n: number) => void
}

const NumberInput = React.memo(({ props, numberChangeEvent }: Props) => {
  const error = useSignal<boolean>(false)

  return (
    <TextField
      type="number"
      error={error.value}
      helperText={error.value === true ? 'Only numbers are allowed' : ''}
      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
        const tmp = parseInt(event.target.value)

        if (isNaN(tmp)) {
          // this stops the user from shooting themselves in the foot.
          error.value = true
          return
        }

        error.value = false
        numberChangeEvent(tmp)
      }}
      onFocusCapture={() => {
        // this is to enable scrolling to change the value of a number input while disabling scroll for the rest of the web page!
        const htmlStyle = document.getElementsByTagName('html')[0].style
        const bodyStyle = document.getElementsByTagName('body')[0].style
        bodyStyle.overflow = 'hidden'
        htmlStyle.overflow = 'hidden'
      }}
      onMouseLeave={(event) => {
        // this enables the whole web page to scroll again when the user is done with this number input
        const htmlStyle = document.getElementsByTagName('html')[0].style
        const bodyStyle = document.getElementsByTagName('body')[0].style
        bodyStyle.overflow = 'visible'
        htmlStyle.overflow = 'visible'

        event.currentTarget.querySelector('input')?.blur()
      }}
      {...props}
    />
  )
})

export default NumberInput
