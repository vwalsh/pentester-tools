import * as React from 'react'
import Button from '@mui/material/Button'
import Dialog from '@mui/material/Dialog'
import DialogActions from '@mui/material/DialogActions'
import DialogContent from '@mui/material/DialogContent'
import DialogTitle from '@mui/material/DialogTitle'
import InfoIcon from '@mui/icons-material/Info'
import { Box } from '@mui/material'
import { useSignal } from '@preact/signals-react'

type Props = {
  title: string
  children?: React.ReactNode
  CustomIcon?: React.ReactNode
  fullScreen?: boolean
  outlined?: boolean
}

function AlertDialog({
  children,
  title,
  CustomIcon,
  fullScreen,
  outlined,
}: Props) {
  const open = useSignal(false)

  const handleClickOpen = () => {
    open.value = true
  }

  const handleClose = () => {
    open.value = false
  }

  return (
    <React.Fragment>
      <Button
        color="info"
        variant={outlined === undefined ? 'text' : 'outlined'}
        onClick={handleClickOpen}
      >
        {CustomIcon === undefined ? <InfoIcon /> : CustomIcon}
      </Button>
      <Dialog
        open={open.value}
        onClose={handleClose}
        aria-labelledby="alert-dialog-title"
        aria-describedby="alert-dialog-description"
        fullScreen={fullScreen}
      >
        <DialogTitle id="alert-dialog-title">{title}</DialogTitle>
        <DialogContent>
          {/* using Box instead of DialogContentText removes an error about the dom not being proper with p being a children of p */}
          {/* <DialogContentText id="alert-dialog-description" sx={{spacing: "10px"}}> */}
          <Box>{children}</Box>
          {/* </DialogContentText> */}
        </DialogContent>
        <DialogActions>
          <Button onClick={handleClose} autoFocus>
            Close
          </Button>
        </DialogActions>
      </Dialog>
    </React.Fragment>
  )
}

export default AlertDialog
