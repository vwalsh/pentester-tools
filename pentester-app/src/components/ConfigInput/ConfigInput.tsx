import TextField from '@mui/material/TextField'
import { setReplacements } from '../../signals/signals'
import { useSignal } from '@preact/signals-react'

export interface InputProps {
  type: 'number' | 'string'
  label: string
  defaultValue: number
  InputProps: { inputProps: { min?: number; max?: number } }
}

interface ConfigInputProps {
  props: InputProps
  replace: string
  defaultValue: string | number
}

function ConfigInput({ props, replace, defaultValue }: ConfigInputProps) {
  const val = useSignal<number | string>(defaultValue)

  return (
    <TextField
      fullWidth
      {...props}
      value={val}
      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
        if (props.type === 'number') {
          setReplacements({
            name: replace,
            value: parseInt(event.target.value),
          })
          val.value = parseInt(event.target.value)
        } else if (props.type === 'string') {
          setReplacements({
            name: replace,
            value: event.target.value,
          })
          val.value = event.target.value
        }
      }}
    />
  )
}

export default ConfigInput
