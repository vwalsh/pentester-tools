import ContentCopyIcon from '@mui/icons-material/ContentCopy'
import { Box, IconButton, TextField, Typography } from '@mui/material'
import { useSignal, useSignalEffect } from '@preact/signals-react'
import { useCallback, useRef } from 'react'
import SuccessTooltip from '../SuccessTooltip'
import WarningIcon from '@mui/icons-material/Warning'
import AlertDialog from '../AlertDialog'
import CodeTypography from '../CodeTypography'

interface Props {
  children?: React.ReactNode
  val: string
  onClick?: () => void
}

function CopyItem({ children, val, onClick }: Props) {
  const tooltipOpen = useSignal(false)

  const copyFallbackRef = useRef<HTMLInputElement | undefined>(undefined)

  const handleTooltipClose = useCallback(() => {
    tooltipOpen.value = false
  }, [tooltipOpen])

  useSignalEffect(() => {
    if (tooltipOpen.value === false) {
      return
    }
    const timer1 = setTimeout(() => {
      tooltipOpen.value = false
    }, 1000)

    return () => {
      clearTimeout(timer1)
    }
  })

  return (
    <Box sx={{ display: 'flex', alignItems: 'center', alignContent: 'center' }}>
      {navigator?.clipboard !== undefined ? (
        <SuccessTooltip
          onClose={handleTooltipClose}
          open={tooltipOpen.value}
          title="Copied!"
        >
          <IconButton
            onClick={() => {
              tooltipOpen.value = true
              navigator.clipboard.writeText(val)

              if (onClick !== undefined) {
                onClick()
              }
            }}
          >
            <ContentCopyIcon />
          </IconButton>
        </SuccessTooltip>
      ) : (
        <>
          <AlertDialog
            title="Warning: Clipboard unavailable"
            CustomIcon={<WarningIcon color="warning" />}
          >
            <Typography>
              The clipboard is unavailable. This is often caused by the security
              context of the domain+protocol used to access this web app.
              Typically, when hosting on localhost the clipboard is allowed over
              http. When hosting this web app over a network, most browsers will
              not enable the clipboard unless https is used. One way to solve
              this is to setup an nginx docker container with self-signed
              certificates to host the app (this is not implemented for you).
              <br />
              <br />
              One very uncommon reason for this failure is an out-of-date
              browser. This web app assumes a relatively recent version of a
              Chromium or Firefox based browser.
              <br />
              <br />
              The fallback that is currently availble is to click into the 'copy
              here' textfield, press <CodeTypography>
                Ctrl + c
              </CodeTypography>, <CodeTypography>Cmd + c</CodeTypography>
              on your keyboard to copy. The text will auto-select each time the
              textfield is clicked, editing for this textfield is disabled to
              stop any accidental changes.
            </Typography>
          </AlertDialog>
          <TextField
            // disabled
            label="copy here"
            value={val}
            sx={{ maxWidth: '70px' }}
            inputRef={copyFallbackRef}
            InputProps={{ readOnly: true }}
            // onChange={(event) => {
            //   setTimeout(() => {
            //     event.target.select()
            //   }, 1)
            // }}
            // onFocus={(event) => {
            //   event.target.select()
            // }}
            onSelect={() => {
              if (copyFallbackRef.current !== undefined) {
                const { selectionStart, selectionEnd, value } =
                  copyFallbackRef.current
                if (selectionStart !== 0 || selectionEnd !== value.length) {
                  copyFallbackRef.current.setSelectionRange(0, value.length)
                }
              }
            }}
          />
        </>
      )}
      {children}
    </Box>
  )
}

export default CopyItem
