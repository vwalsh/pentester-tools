import { useContext } from 'react'
import { Box, Grid, List } from '@mui/material'

import React from 'react'
import { AppState } from '../../pages/Home/Home'
import CommandTools from './components/CommandTools'
import DownloadFiles from './components/DownloadFiles'
import TerminalWrap from './components/TerminalWrap'
import CommandOptions from './components/CommandOptions'
import CommandText from './components/CommandText'

// interface ReactChildren {
//   children?: React.ReactNode
// }

const CommandConfigurator = React.memo(() => {
  const { command_windows } = useContext(AppState)

  const Windows = React.memo(() => {
    if (
      command_windows.value === undefined ||
      command_windows.value.length < 1
    ) {
      return <></>
    }

    return command_windows.value.map((cwin) => {
      //   const WindowTools = React.memo(({ children }: ReactChildren) => {
      const WindowTools = React.memo(() => {
        // return command_windows.value.map((cwin) => {
        return (
          <React.Fragment key={`win-${cwin.win}-tools`}>
            {/* <>{children}</> */}
            <List>
              <DownloadFiles windowNum={cwin.win} />

              <CommandTools windowNum={cwin.win} />
              <TerminalWrap windowNum={cwin.win} />
              <hr />
            </List>
          </React.Fragment>
        )
        //   })
        //   }, [command_windows.value])
      })

      return (
        <React.Fragment key={`windows-${cwin.win}-all`}>
          {/* <WindowTools>
            <CommandText cwin={cwin} />
          </WindowTools> */}
          <CommandText cwin={cwin} />

          <WindowTools />
        </React.Fragment>
      )
    })
  })

  return (
    <>
      <Grid container>
        <Grid item xs={3}>
          <List>
            <CommandOptions command_windows={command_windows} />
          </List>
        </Grid>
        <Grid item xs={9}>
          <Box id="windows-box">
            <Windows />
          </Box>
        </Grid>
        {/* <Grid item xs={3}>
          {WindowTools}
        </Grid> */}
      </Grid>
    </>
  )
})

export default CommandConfigurator
