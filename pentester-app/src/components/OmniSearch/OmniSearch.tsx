import { Autocomplete, Box, Typography } from '@mui/material'
import TextField from '@mui/material/TextField'
import AlertDialog from '../AlertDialog'
import { AppState } from '../../pages/Home/Home'

import { useContext } from 'react'

function OmniSearch() {
  interface TermsProps {
    label: string
  }

  const { search } = useContext(AppState)

  const search_terms: Array<TermsProps> = [
    { label: 'http download' },
    { label: 'rdp' },
    { label: 'ftp' },
  ]

  return (
    <>
      <Box
        sx={{ display: 'flex', alignContent: 'center', alignItems: 'center' }}
      >
        <AlertDialog title="Search for a command">
          <Typography>
            Fuzzy search is applied, for best results consider a category such
            as 'download' or a protocol like 'http'
          </Typography>
        </AlertDialog>

        <Autocomplete
          freeSolo
          disablePortal
          id="omni-search-box"
          options={search_terms}
          sx={{ width: 300 }}
          renderInput={(params) => (
            <TextField {...params} label="Command Search..." />
          )}
          onChange={(
            event: React.SyntheticEvent,
            newValue: string | TermsProps | null
          ) => {
            if (newValue === null) {
              search.value = ''
            } else if (typeof newValue === 'string') {
              search.value = newValue
            } else {
              search.value = newValue?.label !== undefined ? newValue.label : ''
            }
          }}
          isOptionEqualToValue={function (
            option: TermsProps,
            value: TermsProps
          ) {
            if (option.label === value.label) {
              return true
            }

            return false
          }}
        />
      </Box>
    </>
  )
}

export default OmniSearch
