import {
  Box,
  Typography,
  List,
  ListItem,
  Grid,
  TextField,
  InputAdornment,
  IconButton,
} from '@mui/material'
import React, { useMemo } from 'react'
import AlertDialog from '../AlertDialog'
import TravelExploreIcon from '@mui/icons-material/TravelExplore'
import CopyItem from '../CopyItem'
import { globalReplacements } from '../../pages/NewCommandBuilder/dataStructures'
import Commands from '../../assets/commands.json'
import { useSignal } from '@preact/signals-react'
import CodeTypography from '../CodeTypography'
import CloseIcon from '@mui/icons-material/Close'

const uniqueReplacements = (() => {
  const tmp: Array<{ replace: string; help: string }> = []

  for (let i = 0; i < Commands.length; i++) {
    for (let ii = 0; ii < Commands[i].cmds.length; ii++) {
      const cfg = Commands[i].cmds[ii]?.config
      if (cfg === undefined) {
        continue
      }

      for (let iii = 0; iii < cfg.length; iii++) {
        if (tmp.findIndex((t) => t.replace === cfg[iii].replace) === -1) {
          tmp.push({ replace: cfg[iii].replace, help: cfg[iii].help })
        }
      }
    }
  }

  return tmp
})()

const GlobalReplacementsDialog = React.memo(() => {
  const search = useSignal<string>('')

  const FoundCustomValues = useMemo(() => {
    if (search.value === '') {
      return <></>
    }

    return uniqueReplacements
      .filter(
        (f) =>
          f.replace.toLowerCase().indexOf(search.value.toLowerCase()) > -1 ||
          f.help.toLowerCase().indexOf(search.value.toLowerCase()) > -1
      )
      .map((u) => {
        return (
          <ListItem
            key={`found-custom-${u.replace}`}
            sx={{ borderBottom: '1px solid #cecece' }}
          >
            <Box>
              <CopyItem val={u.replace}>
                <CodeTypography sx={{ width: 'auto' }}>
                  {u.replace}
                </CodeTypography>
              </CopyItem>

              <Typography>{u.help}</Typography>
            </Box>
          </ListItem>
        )
      })
  }, [search.value])

  const GlobalReplacements = useMemo(() => {
    return globalReplacements.map((rep) => {
      return (
        <ListItem
          key={`${rep.replace}`}
          sx={{ borderBottom: '1px solid #cecece' }}
        >
          <Box>
            <CopyItem val={rep.replace}>
              <CodeTypography>{rep.replace}</CodeTypography>

              <Typography sx={{ fontFamily: 'monospace', userSelect: 'none' }}>
                {'   Example:'}
                <CodeTypography>{rep.example}</CodeTypography>
              </Typography>
            </CopyItem>
            <Typography sx={{ display: 'block' }}>Desc: {rep.desc}</Typography>
          </Box>
        </ListItem>
      )
    })
  }, [])

  return (
    <AlertDialog
      title="Global Replacement Values - Copy and Paste to use"
      CustomIcon={<TravelExploreIcon />}
    >
      <>
        <Grid container spacing={'10px'}>
          <Grid item xs={6}>
            <List>{GlobalReplacements}</List>
          </Grid>
          <Grid item xs={6}>
            <TextField
              label="Search Commands for Replacement Values"
              sx={{ marginTop: '15px' }}
              fullWidth
              placeholder="__ to find all"
              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
                search.value = event.target.value
              }}
              InputProps={{
                endAdornment: (
                  <InputAdornment position="end">
                    <IconButton
                      onClick={() => {
                        search.value = ''
                      }}
                    >
                      <CloseIcon />
                    </IconButton>
                  </InputAdornment>
                ),
              }}
            />
            <List>{FoundCustomValues}</List>
          </Grid>
        </Grid>
      </>
    </AlertDialog>
  )
})

export default GlobalReplacementsDialog
