import React, { useState, useEffect, useCallback } from 'react'
import Context from './Context'

interface Props {
  children?: React.ReactNode
}

const GlobalStore = ({ children }: Props) => {
  const [ahost, setAhost] = useState<string>('')
  const [aport, setAport] = useState<number>(8000)
  const [search, setSearch] = useState<string>('')
  const [httpFile, setHTTPFile] = useState<string>('')
  const [fileSearchEnabled, setFileSearchEnabled] = useState<boolean>(false)
  const [terminalWrap, setTerminalWrap] = useState<string>('')


  return (
    <Context.Provider
      value={{
        ahost,
        setAhost: (ahost: string) => setAhost(ahost),

        aport,
        setAport: (aport: number) => setAport(aport),

        search,
        setSearch: (search: string) => setSearch(search),

        httpFile,
        setHTTPFile: (httpFile: string) => setHTTPFile(httpFile),

        fileSearchEnabled,
        setFileSearchEnabled: (enabled: boolean) =>
          setFileSearchEnabled(enabled),

          terminalWrap,
          setTerminalWrap: (terminalWrap: string) => setTerminalWrap(terminalWrap),
      }}
    >
      {children}
    </Context.Provider>
  )
}

export default GlobalStore
