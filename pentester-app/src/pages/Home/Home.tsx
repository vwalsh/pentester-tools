import { Autocomplete, Grid, TextField } from '@mui/material'
import IPv4Input from '../../components/IPv4Input'
import OmniSearch from './components/OmniSearch'
import CommandConfigurator from './components/CommandConfigurator'

import Files from '../../assets/dirtree.json'
import { useSignalEffect } from '@preact/signals-react'
import { createContext, useContext } from 'react'
import createCommandConfiguratorState from '../../signals/signals'

const signalState = createCommandConfiguratorState()
export const AppState = createContext(signalState)

function Home() {
  return (
    <AppState.Provider value={signalState}>
      <HomeUi />
    </AppState.Provider>
  )
}

function HomeUi() {
  const { httpFile, ahost, aport, vhost, vport, fileSearchEnabled } =
    useContext(AppState)

  useSignalEffect(() => {
    httpFile.value =
      httpFile.value === undefined || httpFile.value === ''
        ? Files[0]
        : httpFile.value
  })

  return (
    <>
      <h1>Pentester Command Configurator</h1>

      <Grid container spacing={2}>
        <Grid item>
          <IPv4Input
            hostSignal={ahost}
            portSignal={aport}
            defaultOctets={[192, 168, 90, 100]}
            role="attacker"
            akaName="kali"
          />
        </Grid>
        <Grid item>
          <IPv4Input
            hostSignal={vhost}
            portSignal={vport}
            defaultOctets={[192, 168, 10, 200]}
            role="victim"
            akaName="target"
          />
        </Grid>

        <Grid item xs={4}>
          <OmniSearch />
        </Grid>
        <Grid item xs={4}>
          {fileSearchEnabled.value === true && (
            <>
              {/* <Typography>Tools</Typography> */}

              <Autocomplete
                disablePortal
                id="omni-filesearch-box"
                options={Files as Array<string>}
                sx={{ width: 300 }}
                value={httpFile.value}
                renderInput={(params) => (
                  <TextField {...params} label="Tools File Search..." />
                )}
                onChange={(
                  _event: React.SyntheticEvent,
                  newValue: string | null
                ) => {
                  httpFile.value = newValue === null ? '' : newValue
                }}
              />
            </>
          )}
        </Grid>
        <Grid item xs={4}></Grid>
      </Grid>

      <hr />

      <CommandConfigurator />
    </>
  )
}

export default Home
