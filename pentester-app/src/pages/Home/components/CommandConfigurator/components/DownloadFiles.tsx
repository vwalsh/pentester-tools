import { ListItem, IconButton, Box, Typography } from '@mui/material'
import React, { useCallback, useContext, useMemo } from 'react'
import CopyItem from '../../../../../components/CopyItem'
import { ConfigCompsProps } from './CommandTools'
import { useComputed } from '@preact/signals-react'
import { AppState } from '../../../Home'
import CloudDownloadIcon from '@mui/icons-material/CloudDownload'
import CodeTypography from '../../../../../components/CodeTypography'
import AlertDialog from '../../../../../components/AlertDialog'

const DownloadFiles = React.memo(({ windowNum }: ConfigCompsProps) => {
  const { command_windows } = useContext(AppState)

  const cwin = useComputed(() => {
    return command_windows.value[windowNum]
  })

  const download_file = useCallback((filename: string, b64data: string) => {
    const data = new Blob([atob(b64data)], { type: 'text' })
    const csvURL = window.URL.createObjectURL(data)
    const tempLink = document.createElement('a')
    tempLink.href = csvURL
    tempLink.setAttribute('download', filename)
    tempLink.click()
  }, [])

  const DownloadsListItems = useMemo(() => {
    if (cwin.value?.code?.length === undefined || cwin.value.code.length < 1) {
      return <></>
    }

    return cwin.value.code.map((code) => {
      return (
        <ListItem key={code.filename}>
          <Box sx={{}}>
            <CopyItem val={atob(code.data)}>
              <IconButton
                onClick={() => {
                  download_file(code.filename, code.data)
                }}
              >
                {code.filename}&nbsp;
                <CloudDownloadIcon />
              </IconButton>
            </CopyItem>
            <CopyItem val={code.sha256}>
              <CodeTypography>
                {`  SHA256:${code?.sha256 === undefined ? '' : code.sha256}`}
              </CodeTypography>
            </CopyItem>
          </Box>
        </ListItem>
      )
    })
  }, [cwin.value?.code, download_file])

  if (cwin.value?.code?.length === undefined || cwin.value.code.length < 1) {
    return <></>
  }

  return (
    <Box sx={{ display: 'flex' }}>
      <AlertDialog title="Help: Downloading Files">
        <Typography>
          The files provided here are often code to use for the command-to-run.
          <br />
          <br />
          Setup details should exist in the Help text for the Commands and it's
          also possible some setup commands are available to run.
          <br />
          <br />
          For basic things like importing a PowerShell script, setup details can
          be omitted as a section on PowerShell exists to help with various
          tasks like this.
        </Typography>
      </AlertDialog>
      <Box>{DownloadsListItems}</Box>
    </Box>
  )
})

export default DownloadFiles
