import React from 'react'
import { Signal } from '@preact/signals-react'
import {
  FormGroup,
  FormControlLabel,
  Checkbox,
  Typography,
  Box,
} from '@mui/material'
import ListEditor from '../../../ListEditor'
import AlertDialog from '../../../../../../components/AlertDialog'
import { DefaultValueProps } from '../../ConfigsEditor'

interface Props {
  customInput: Signal<boolean>
  optionsList: Signal<Array<string>>
  onDefaultValueChange?: (value: string) => void
  defaultValue: Signal<DefaultValueProps>
}

const SelectConfigToolEditor = React.memo(
  ({ customInput, optionsList, onDefaultValueChange, defaultValue }: Props) => {
    return (
      <>
        <Box sx={{ display: 'flex' }}>
          <AlertDialog title={`Help: Custom text input`}>
            <Typography>
              If this option is checked, then the end-user will be able to
              select from a list of options OR they can type in their own value.
              This can be very powerful to help guide the user towards several
              common options, while giving them the flexibility to fully
              customize.
            </Typography>
          </AlertDialog>

          <FormGroup>
            <FormControlLabel
              sx={{ userSelect: 'none' }}
              control={
                <Checkbox
                  inputProps={{
                    'aria-label':
                      'Enable custom text input in addition to selectable options',
                  }}
                  checked={!!customInput.value}
                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
                    customInput.value = event.target.checked
                  }}
                />
              }
              label={
                'Enable custom text input in addition to selectable options'
              }
            />
          </FormGroup>
        </Box>
        <ListEditor
          uniqueEntries={true}
          listState={optionsList}
          title="Select Options Editor"
          onDefaultValueChange={onDefaultValueChange}
          defaultValue={defaultValue}
          helpText={
            <Typography>
              Options allow the user to be guided towards a valid value for this
              replacement value. If the custom text entry is disabled then ONLY
              the options entered here will be available to the end user.
              <br />
              <br />
              TIP: type the option and then press ENTER to add it to the list.
              <br />
              <br />
              Choose a default selected option from the list of options entered
              into the Select Options Editor by clicking the enabled blue check
              button. When an option is selected as default, a Star Icon will be
              displayed for this option. A default option will be automatically
              selected when the first option is added to the list. Use the
              buttons to change the default selected option as needed.
              <br />
              <br />
              NOTE: If the Enable custom input is checked, then the default
              option can be any value - even blank! An textfield will appear
              allowing for custom values to be entered.
            </Typography>
          }
        />
      </>
    )
  }
)

export default SelectConfigToolEditor
