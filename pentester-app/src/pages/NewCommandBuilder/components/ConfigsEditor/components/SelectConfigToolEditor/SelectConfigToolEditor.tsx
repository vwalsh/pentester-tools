import React from 'react'
import { Signal } from '@preact/signals-react'
import {
  FormGroup,
  FormControlLabel,
  Checkbox,
  Typography,
} from '@mui/material'
import ListEditor from '../../../ListEditor'

interface Props {
  customInput: Signal<boolean>
  optionsList: Signal<Array<string>>
}

const SelectConfigToolEditor = React.memo(
  ({ customInput, optionsList }: Props) => {
    return (
      <>
        <FormGroup>
          <FormControlLabel
            sx={{ userSelect: 'none' }}
            control={
              <Checkbox
                inputProps={{
                  'aria-label':
                    'Enable custom text input in addition to selectable options',
                }}
                checked={!!customInput.value}
                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {
                  customInput.value = event.target.checked
                }}
              />
            }
            label={'Enable custom text input in addition to selectable options'}
          />
        </FormGroup>

        <ListEditor
          uniqueEntries={true}
          listState={optionsList}
          title="Select Options Editor"
          helpText={
            <Typography>
              Options allow the user to be guided towards a valid value for this
              replacement value. If the custom text entry is disabled then ONLY
              the options entered here will be available to the end user.
              <br />
              <br />
              TIP: type the option and then press ENTER to add it to the list.
            </Typography>
          }
        />
      </>
    )
  }
)

export default SelectConfigToolEditor
